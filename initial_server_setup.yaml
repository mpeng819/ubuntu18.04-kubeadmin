## ansible-playbook -u apstra -k -s -i hosts init_server_setup.yaml

---
- hosts: all
  remote_user: apstra
  gather_facts: false
  vars:
    create_user: apstra
    copy_local_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    sys_packages: [ 'curl', 'git', 'ufw','ca-certificates','software-properties-common' ]

  tasks:
    - name: Make sure we have a 'apstra' group
      group:
        name: apstra
        state: present

    - name: Allow 'apstra' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%apstra'
        line: '%apstra ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: apstra
        append: true
        createhome: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    - name: Set hostname
      hostname:
        name: '{{ inventory_hostname }}'

    - name: Replace a localhost entry with our own
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: 127.0.1.1 {{ inventory_hostname }}

    - name: Add hosts mappings to /etc/hosts
      blockinfile:
        path: /etc/hosts
        block: |
          {{ item.ip }} {{ item.name }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
      with_items:
      - { name: k8s-master, ip: 172.16.10.20 }
      - { name: k8s-node1, ip: 172.16.10.21 }
      - { name: k8s-node2, ip: 172.16.10.22 }
      - { name: k8s-node3, ip: 172.16.10.23 }

    - name: Insert ENV in .bashrc for calicoctl
      blockinfile:
        path: /home/{{ create_use }}/.bashrc
        block: |
          export DATASTORE_TYPE=kubernetes
          export KUBECONFIG=~/.kube/config

    - name: Update apt
      apt: update_cache=yes

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest

    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow all access to tcp port 6443 for connecting to k8s api-server
      ufw:
        rule: allow
        port: 6443
        proto: tcp

    - name: Allow all access to tcp port 179 for BGP
      ufw:
        rule: allow
        port: 179
        proto: tcp

    - name: Download calicoctl
      get_url:
        url: https://github.com/projectcalico/calicoctl/releases/download/v3.10.0/calicoctl
        dest: /usr/local/bin/calicoctl
        mode: '0555'

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming

